(()=>{"use strict";var t={913:(t,e,o)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.config=void 0;const r=o(142),a=o(282);r.config(),e.config={auth:{token:a.env.AUTH_TOKEN||""},db:{path:a.env.DB_PATH||":memory:"},http:{port:+(a.env.HTTP_PORT||3e3)}},e.default=e.config},244:(t,e,o)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.BoardController=void 0;const r=o(758);class a{constructor(t,e){this.boardRepository=t,this.boardManager=e,this.index=async t=>{const e=+(t.query.page||0),o=await this.boardRepository.browse(e);t.body={items:o.map(this.convertModelToDto)}},this.show=async t=>{const e=String(t.params.slug||"").trim(),o=await this.boardRepository.readBySlug(e);if(null===o)throw new r.NotFoundError("slug");t.body={item:this.convertModelToDto(o)}},this.create=async t=>{const e=String(t.request.body.slug||"").trim(),o=String(t.request.body.title||"").trim(),a=await this.boardManager.createBoard(this.boardRepository,e,o);if(null===a)throw new r.NotFoundError("slug");t.status=201,t.set("Location",`/api/v1/boards/${a.slug}`),t.body={item:this.convertModelToDto(a)}},this.update=async t=>{const e=String(t.params.slug||"").trim(),o=String(t.request.body.slug||"").trim(),a=String(t.request.body.title||"").trim(),s=await this.boardManager.updateBoard(this.boardRepository,e,o,a);if(null===s)throw new r.NotFoundError("slug");t.body={item:this.convertModelToDto(s)}},this.delete=async t=>{const e=String(t.params.slug||"").trim(),o=await this.boardManager.deleteBoard(this.boardRepository,e);if(null===o)throw new r.NotFoundError("slug");t.body={item:this.convertModelToDto(o)}}}convertModelToDto(t){return{slug:t.slug,title:t.title,created_at:t.createdAt.toISOString(),post_count:+t.postCount}}}e.BoardController=a,e.default=a},762:(t,e,o)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.BoardThreadController=void 0;const r=o(758);class a{constructor(t,e){this.boardRepository=t,this.threadRepository=e,this.index=async t=>{const e=String(t.params.slug||"").trim(),o=await this.boardRepository.readBySlug(e);if(null===o)throw new r.NotFoundError("slug");const a=+(t.query.page||0),s=await this.threadRepository.browseForBoard(o.id,a);t.body={items:s.map(this.convertModelToDto)}},this.show=async t=>{const e=String(t.params.slug||"").trim(),o=await this.boardRepository.readBySlug(e);if(null===o)throw new r.NotFoundError("slug");const a=+(t.params.threadId||0),s=await this.threadRepository.read(a);if(null===s||s.board.id!==o.id)throw new r.NotFoundError("threadId");t.body={item:this.convertModelToDto(s)}},this.create=async t=>{const e=String(t.params.slug||"").trim(),o=await this.boardRepository.readBySlug(e);if(null===o)throw new r.NotFoundError("slug");const a=String(t.request.body.name||""),s=String(t.request.body.message||""),i=t.request.ip,d=await o.createThread(this.boardRepository,this.threadRepository,a,s,i);t.status=201,t.set("Location",`/api/v1/boards/${o.slug}/threads/${d.id}`),t.body={item:this.convertModelToDto(d)}},this.delete=async t=>{const e=String(t.params.slug||"").trim(),o=await this.boardRepository.readBySlug(e);if(null===o)throw new r.NotFoundError("slug");const a=+(t.params.threadId||0),s=await o.deleteThread(this.threadRepository,a);t.body={item:this.convertModelToDto(s)}}}convertModelToDto(t){return{id:+t.id,slug:t.board.slug,name:t.name,message:t.message,post_count:+t.postCount,created_at:t.createdAt.toISOString(),bumped_at:t.bumpedAt.toISOString()}}}e.BoardThreadController=a,e.default=a},356:(t,e,o)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.BoardThreadPostController=void 0;const r=o(758);class a{constructor(t,e,o){this.boardRepository=t,this.threadRepository=e,this.postRepository=o,this.index=async t=>{const e=String(t.params.slug||"").trim(),o=await this.boardRepository.readBySlug(e);if(null===o)throw new r.NotFoundError("slug");const a=+(t.params.threadId||0),s=await this.threadRepository.read(a);if(null===s||s.board.id!==o.id)throw new r.NotFoundError("threadId");const i=await this.postRepository.browseForThread(a);t.body={items:i.map(this.convertModelToDto)}},this.show=async t=>{const e=String(t.params.slug||"").trim(),o=await this.boardRepository.readBySlug(e);if(null===o)throw new r.NotFoundError("slug");const a=+(t.params.threadId||0),s=await this.threadRepository.read(a);if(null===s||s.board.id!==o.id)throw new r.NotFoundError("threadId");const i=+(t.params.id||0),d=await this.postRepository.read(i);if(null===d||d.parentId!==s.id&&d.id!==s.id||d.board.id!==o.id)throw new r.NotFoundError("id");t.body={item:this.convertModelToDto(d)}},this.create=async t=>{const e=String(t.params.slug||"").trim(),o=await this.boardRepository.readBySlug(e);if(null===o)throw new r.NotFoundError("slug");const a=+(t.params.threadId||0),s=await this.threadRepository.read(a);if(null===s||s.board.id!==o.id)throw new r.NotFoundError("threadId");const i=String(t.request.body.name||""),d=String(t.request.body.message||""),n=t.request.ip,l=await s.createPost(this.boardRepository,this.threadRepository,this.postRepository,i,d,n);t.status=201,t.set("Location",`/api/v1/boards/${o.slug}/threads/${s.id}/posts/${l.id}`),t.body={item:this.convertModelToDto(l)}},this.delete=async t=>{const e=String(t.params.slug||"").trim(),o=await this.boardRepository.readBySlug(e);if(null===o)throw new r.NotFoundError("slug");const a=+(t.params.threadId||0),s=await this.threadRepository.read(a);if(null===s||s.board.id!==o.id)throw new r.NotFoundError("threadId");const i=+(t.params.id||0),d=await s.deletePost(this.postRepository,i);t.body={item:this.convertModelToDto(d)}}}convertModelToDto(t){return{id:+t.id,slug:t.board.slug,parent_id:+t.parentId,name:t.name,message:t.message,created_at:t.createdAt.toISOString()}}}e.BoardThreadPostController=a,e.default=a},364:(t,e,o)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.PostController=void 0;const r=o(758);class a{constructor(t,e,o){this.boardRepository=t,this.threadRepository=e,this.postRepository=o,this.index=async t=>{const e=await this.postRepository.browse();t.body={items:e.map(this.convertModelToDto)}},this.show=async t=>{const e=+(t.params.id||0),o=await this.postRepository.read(e);if(null===o)throw new r.NotFoundError("id");t.body={item:this.convertModelToDto(o)}},this.create=async t=>{const e=+(t.request.body.parentId||0),o=await this.threadRepository.read(e);if(null===o)throw new r.NotFoundError("parentId");const a=String(t.request.body.name||""),s=String(t.request.body.message||""),i=t.request.ip,d=await o.createPost(this.boardRepository,this.threadRepository,this.postRepository,a,s,i);t.status=201,t.set("Location",`/api/v1/posts/${d.id}`),t.body={item:this.convertModelToDto(d)}},this.delete=async t=>{const e=+(t.params.id||0);let o=await this.postRepository.read(e);if(null===o)throw new r.NotFoundError("id");const a=await this.threadRepository.read(o.parentId);if(null===a)throw new r.NotFoundError("threadId");o=await a.deletePost(this.postRepository,e),t.body={item:this.convertModelToDto(o)}}}convertModelToDto(t){return{id:+t.id,slug:t.board.slug,parent_id:+t.parentId,name:t.name,message:t.message,created_at:t.createdAt.toISOString()}}}e.PostController=a,e.default=a},250:(t,e,o)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.ThreadController=void 0;const r=o(758);class a{constructor(t,e){this.boardRepository=t,this.threadRepository=e,this.index=async t=>{const e=+(t.query.page||0),o=await this.threadRepository.browse(e);t.body={items:o.map(this.convertModelToDto)}},this.show=async t=>{const e=+(t.params.threadId||0),o=await this.threadRepository.read(e);if(null===o)throw new r.NotFoundError("threadId");t.body={item:this.convertModelToDto(o)}},this.create=async t=>{const e=String(t.request.body.slug||"").trim(),o=await this.boardRepository.readBySlug(e);if(null===o)throw new r.NotFoundError("slug");const a=String(t.request.body.name||""),s=String(t.request.body.message||""),i=t.request.ip,d=await o.createThread(this.boardRepository,this.threadRepository,a,s,i);t.status=201,t.set("Location",`/api/v1/threads/${d.id}`),t.body={item:this.convertModelToDto(d)}},this.delete=async t=>{const e=+(t.params.threadId||0);let o=await this.threadRepository.read(e);if(null===o)throw new r.NotFoundError("threadId");const a=await this.boardRepository.read(o.board.id);if(null===a)throw new r.NotFoundError("slug");o=await a.deleteThread(this.threadRepository,e),t.body={item:this.convertModelToDto(o)}}}convertModelToDto(t){return{id:+t.id,slug:t.board.slug,name:t.name,message:t.message,created_at:t.createdAt.toISOString(),bumped_at:t.bumpedAt.toISOString(),post_count:+t.postCount}}}e.ThreadController=a,e.default=a},417:(t,e,o)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.ThreadPostController=void 0;const r=o(758);class a{constructor(t,e,o){this.boardRepository=t,this.threadRepository=e,this.postRepository=o,this.index=async t=>{const e=+(t.params.threadId||0);if(null===await this.threadRepository.read(e))throw new r.NotFoundError("threadId");const o=await this.postRepository.browseForThread(e);t.body={items:o.map(this.convertModelToDto)}},this.show=async t=>{const e=+(t.params.threadId||0),o=await this.threadRepository.read(e);if(null===o)throw new r.NotFoundError("threadId");const a=+(t.params.id||0),s=await this.postRepository.read(a);if(null===s||s.parentId!==o.id&&s.id!==o.id)throw new r.NotFoundError("id");t.body={item:this.convertModelToDto(s)}},this.create=async t=>{const e=+(t.params.threadId||0),o=await this.threadRepository.read(e);if(null===o)throw new r.NotFoundError("threadId");const a=String(t.request.body.name||""),s=String(t.request.body.message||""),i=t.request.ip,d=await o.createPost(this.boardRepository,this.threadRepository,this.postRepository,a,s,i);t.status=201,t.set("Location",`/api/v1/threads/${o.id}/posts/${d.id}`),t.body={item:this.convertModelToDto(d)}},this.delete=async t=>{const e=+(t.params.threadId||0),o=await this.threadRepository.read(e);if(null===o)throw new r.NotFoundError("threadId");const a=+(t.params.id||0),s=await o.deletePost(this.postRepository,a);t.body={item:this.convertModelToDto(s)}}}convertModelToDto(t){return{id:+t.id,slug:t.board.slug,parent_id:+t.parentId,name:t.name,message:t.message,created_at:t.createdAt.toISOString()}}}e.ThreadPostController=a,e.default=a},758:(t,e)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.ConflictError=e.NotFoundError=e.NotAuthenticatedError=e.ValidationError=void 0;class o extends Error{constructor(t,e,o){super(o),this.field=t,this.error=e}}e.ValidationError=o;class r extends Error{}e.NotAuthenticatedError=r;class a extends Error{constructor(t,e){super(e),this.field=t}}e.NotFoundError=a;class s extends Error{constructor(t,e){super(e),this.field=t}}e.ConflictError=s},343:(t,e,o)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.auth=void 0;const r=o(913),a=o(758);e.auth=function(){return async function(t,e){if(t.get("Authorization")!==`Bearer ${r.default.auth.token}`)throw new a.NotAuthenticatedError;await e()}}},697:(t,e,o)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.errorHandler=void 0;const r=o(758);e.errorHandler=function(){return async function(t,e){try{await e()}catch(e){e instanceof r.ValidationError?(t.status=400,t.body={status:400,field:e.field,message:e.error}):e instanceof r.NotAuthenticatedError?(t.status=401,t.set("WWW-Authenticate","Bearer"),t.body={status:401,message:"not_authenticated"}):e instanceof r.NotFoundError?(t.status=404,t.body={status:404,field:e.field,message:e.message||"not_found"}):e instanceof r.ConflictError?(t.status=409,t.body={status:409,field:e.field,message:e.message||"conflict"}):(t.status=500,t.body={status:500,message:"internal_server_error"},console.error(e))}}}},482:(t,e,o)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.BoardManager=void 0;const r=o(758),a=o(812);class s{async createBoard(t,e,o){if(!e.length)throw new r.ValidationError("slug","required");if(e.length>a.default.MAX_SLUG_LENGTH)throw new r.ValidationError("slug","max-length");if(null===e.match(a.default.SLUG_PATTERN))throw new r.ValidationError("slug","pattern");if(!o.length)throw new r.ValidationError("title","required");if(e.length>a.default.MAX_TITLE_LENGTH)throw new r.ValidationError("title","max-length");if(-1!==a.default.RESERVED_NAMES.indexOf(e))throw new r.ConflictError("slug");if(null!==await t.readBySlug(e))throw new r.ConflictError("slug");const s=await t.add(e,o);if(null===s)throw new r.NotFoundError("slug");return s}async updateBoard(t,e,o,s){if(!o.length)throw new r.ValidationError("slug","required");if(o.length>a.default.MAX_SLUG_LENGTH)throw new r.ValidationError("slug","max-length");if(null===o.match(a.default.SLUG_PATTERN))throw new r.ValidationError("slug","pattern");if(!s.length)throw new r.ValidationError("title","required");if(o.length>a.default.MAX_TITLE_LENGTH)throw new r.ValidationError("title","max-length");if(-1!==a.default.RESERVED_NAMES.indexOf(o))throw new r.ConflictError("slug");let i=await t.readBySlug(e);if(null===i)throw new r.NotFoundError("slug");if(i=await t.edit(i.id,o,s),null===i)throw new r.NotFoundError("slug");return i}async deleteBoard(t,e){let o=await t.readBySlug(e);if(null===o)throw new r.NotFoundError("slug");if(o=await t.delete(o.id),null===o)throw new r.NotFoundError("slug");return o}}e.BoardManager=s,e.default=s},812:(t,e,o)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.Board=void 0;const r=o(758),a=o(624);class s{constructor(t,e,o,r,a){this.id=t,this.slug=e,this.title=o,this.createdAt=r,this.postCount=a}async createThread(t,e,o,s,i){if(!o.length)throw new r.ValidationError("name","required");if(o.length>a.default.MAX_NAME_LENGTH)throw new r.ValidationError("name","max-length");if(!s.length)throw new r.ValidationError("message","required");if(s.length>a.default.MAX_MESSAGE_LENGTH)throw new r.ValidationError("message","max-length");let d=null;try{await e.begin(),d=await e.add(this.id,o,s,i),await t.incrementPostCount(this.id),await e.commit()}catch(t){throw await e.rollback(),t}if(null===d)throw new r.NotFoundError("id");return d}async deleteThread(t,e){let o=await t.read(e);if(null===o||o.board.id!==this.id)throw new r.NotFoundError("threadId");if(o=await t.delete(e),null===o)throw new r.NotFoundError("threadId");return o}}e.Board=s,s.MAX_SLUG_LENGTH=20,s.MAX_TITLE_LENGTH=100,s.SLUG_PATTERN=/^[0-9a-z_-]+$/,s.RESERVED_NAMES=["admin","api","dashboard","settings","sse","ws"],e.default=s},894:(t,e)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.Post=void 0;class o{constructor(t,e,o,r,a,s,i){this.id=t,this.board=e,this.parentId=o,this.name=r,this.message=a,this.ip=s,this.createdAt=i}}e.Post=o,o.MAX_NAME_LENGTH=40,o.MAX_MESSAGE_LENGTH=8e3,e.default=o},624:(t,e,o)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.Thread=void 0;const r=o(758);class a{constructor(t,e,o,r,a,s,i,d){this.id=t,this.board=e,this.name=o,this.message=r,this.ip=a,this.postCount=s,this.createdAt=i,this.bumpedAt=d}async createPost(t,e,o,s,i,d){if(!s.length)throw new r.ValidationError("name","required");if(s.length>a.MAX_NAME_LENGTH)throw new r.ValidationError("name","max-length");if(!i.length)throw new r.ValidationError("message","required");if(i.length>a.MAX_MESSAGE_LENGTH)throw new r.ValidationError("message","max-length");let n=null;try{await o.begin(),n=await o.add(this.board.id,this.id,s,i,d),await t.incrementPostCount(this.board.id),await e.incrementPostCount(this.id),this.postCount<a.BUMP_LIMIT&&await e.bumpThread(this.id),await o.commit()}catch(t){throw await o.rollback(),t}if(null===n)throw new r.NotFoundError("id");return n}async deletePost(t,e){let o=await t.read(e);if(null===o||o.parentId!==this.id)throw new r.NotFoundError("id");if(o=await t.delete(e),null===o)throw new r.NotFoundError("id");return o}}e.Thread=a,a.MAX_NAME_LENGTH=40,a.MAX_MESSAGE_LENGTH=8e3,a.BUMP_LIMIT=500,e.default=a},59:(t,e,o)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.BoardRepository=void 0;const r=o(812),a=o(251);class s extends a.default{async browse(t=0){const e=`SELECT * FROM boards\n      ORDER BY post_count DESC, id DESC\n      LIMIT ${s.PER_PAGE} OFFSET ${Math.max(0,Math.floor(t))*s.PER_PAGE}`,{rows:o}=await this.allAsync(e);return o.map(this.convertDtoToModel)}async read(t){const{row:e}=await this.getAsync("SELECT * FROM boards\n      WHERE id = ?\n      ORDER BY id DESC\n      LIMIT 1",[t]);return null===e?null:this.convertDtoToModel(e)}async readBySlug(t){const{row:e}=await this.getAsync("SELECT * FROM boards\n      WHERE slug = ?\n      ORDER BY id DESC\n      LIMIT 1",[t]);return null===e?null:this.convertDtoToModel(e)}async edit(t,e,o){return null===await this.read(t)?null:(await this.runAsync("UPDATE boards\n      SET slug = ?, title = ?\n      WHERE id = ?",[e,o,t]),this.readBySlug(e))}async incrementPostCount(t){return null===await this.read(t)?null:(await this.runAsync("UPDATE boards\n      SET post_count = post_count + 1\n      WHERE id = ?",[t]),await this.read(t))}async add(t,e){return await this.runAsync("INSERT INTO boards(slug, title, post_count, created_at)\n      VALUES (?, ?, 0, strftime('%s','now'))",[t,e]),this.readBySlug(t)}async delete(t){const e=await this.read(t);return null===e?null:(await this.runAsync("DELETE FROM boards\n      WHERE id = ?",[t]),e)}convertDtoToModel(t){return new r.default(+t.id,t.slug,t.title,new Date(t.created_at*s.MS_IN_SECOND),+t.post_count)}}e.BoardRepository=s,s.PER_PAGE=100,s.MS_IN_SECOND=1e3,e.default=s},320:(t,e)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.setupDatabase=void 0,e.setupDatabase=function(t){t.serialize((()=>{t.run("CREATE TABLE IF NOT EXISTS boards (\n      id INTEGER NOT NULL PRIMARY KEY,\n      slug TEXT NOT NULL UNIQUE,\n      title TEXT NOT NULL,\n      post_count INTEGER NOT NULL,\n      created_at INTEGER NOT NULL\n    )"),t.run("CREATE INDEX IF NOT EXISTS boards_post_count_idx ON boards (post_count)"),t.run("CREATE TABLE IF NOT EXISTS posts (\n      id INTEGER NOT NULL PRIMARY KEY,\n      board_id INTEGER NOT NULL REFERENCES boards (id) ON DELETE CASCADE,\n      parent_id INTEGER REFERENCES posts (id) ON DELETE CASCADE,\n      name TEXT NOT NULL,\n      message TEXT NOT NULL,\n      ip TEXT NOT NULL,\n      created_at INTEGER NOT NULL,\n      bumped_at INTEGER,\n      post_count INTEGER\n    )"),t.run("CREATE INDEX IF NOT EXISTS posts_board_id_idx ON posts (board_id)"),t.run("CREATE INDEX IF NOT EXISTS posts_parent_id_idx ON posts (parent_id)"),t.run("CREATE INDEX IF NOT EXISTS posts_bumped_at_idx ON posts (bumped_at)")}))}},451:(t,e,o)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.PostRepository=void 0;const r=o(812),a=o(894),s=o(251);class i extends s.default{async browse(){const{rows:t}=await this.allAsync("SELECT\n        p.*,\n        b.id as board_id, b.slug as board_slug, b.title as board_title, b.created_at as board_created_at, b.post_count as board_post_count\n      FROM posts p\n      INNER JOIN boards b ON b.id = p.board_id\n      ORDER BY p.id");return t.map(this.convertDtoToModel)}async browseForThread(t){const{rows:e}=await this.allAsync("SELECT\n        p.*,\n        b.id as board_id, b.slug as board_slug, b.title as board_title, b.created_at as board_created_at, b.post_count as board_post_count\n      FROM posts p\n      INNER JOIN boards b ON b.id = p.board_id\n      WHERE p.parent_id = ? OR p.id = ?\n      ORDER BY p.id",[t,t]);return e.map(this.convertDtoToModel)}async read(t){const{row:e}=await this.getAsync("SELECT\n        p.*,\n        b.id as board_id, b.slug as board_slug, b.title as board_title, b.created_at as board_created_at, b.post_count as board_post_count\n      FROM posts p\n      INNER JOIN boards b ON b.id = p.board_id\n      WHERE p.id = ?\n      ORDER BY p.id DESC\n      LIMIT 1",[t]);return null===e?null:this.convertDtoToModel(e)}async add(t,e,o,r,a){const s=await this.runAsync("INSERT INTO posts(board_id, parent_id, name, message, ip, created_at, bumped_at)\n      VALUES (?, ?, ?, ?, ?, strftime('%s','now'), NULL)",[t,e,o,r,a]);return this.read(s.lastID)}async delete(t){const e=await this.read(t);return null===e?null:(await this.runAsync("DELETE FROM posts\n      WHERE id = ? AND parent_id IS NOT NULL",[t]),e)}convertDtoToModel(t){return new a.default(+t.id,new r.default(+t.board_id,t.board_slug,t.board_title,new Date(+t.board_created_at*i.MS_IN_SECOND),+t.board_post_count),+(t.parent_id||0),t.name,t.message,t.ip,new Date(t.created_at*i.MS_IN_SECOND))}}e.PostRepository=i,i.PER_PAGE=100,i.MS_IN_SECOND=1e3,e.default=i},251:(t,e)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.Repository=void 0;class o{constructor(t){this.db=t}async begin(){await this.runAsync("BEGIN")}async commit(){await this.runAsync("COMMIT")}async rollback(){await this.runAsync("ROLLBACK")}async runAsync(t,e=[]){return new Promise(((o,r)=>{this.db.run(t,e,(function(t){if(null!==t)return r(t);o(this)}))}))}async getAsync(t,e=[]){return new Promise(((o,r)=>{this.db.get(t,e,(function(t,e){return null!==t?r(t):void 0===e?o({statement:this,row:null}):void o({statement:this,row:e})}))}))}async allAsync(t,e=[]){return new Promise(((o,r)=>{this.db.all(t,e,(function(t,e){if(null!==t)return r(t);o({statement:this,rows:e})}))}))}}e.Repository=o,e.default=o},801:(t,e,o)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.ThreadRepository=void 0;const r=o(812),a=o(624),s=o(251);class i extends s.default{async browse(t=0){const e=`SELECT\n        p.*,\n        b.id as board_id, b.slug as board_slug, b.title as board_title, b.created_at as board_created_at, b.post_count as board_post_count\n      FROM posts p\n      INNER JOIN boards b ON b.id = p.board_id\n      WHERE p.parent_id IS NULL\n      ORDER BY p.bumped_at DESC, p.id DESC\n      LIMIT ${i.PER_PAGE} OFFSET ${Math.max(0,Math.floor(t))*i.PER_PAGE}`,{rows:o}=await this.allAsync(e);return o.map(this.convertDtoToModel)}async browseForBoard(t,e=0){const o=`SELECT\n        p.*,\n        b.id as board_id, b.slug as board_slug, b.title as board_title, b.created_at as board_created_at, b.post_count as board_post_count\n      FROM posts p\n      INNER JOIN boards b ON b.id = p.board_id\n      WHERE p.board_id = ? AND p.parent_id IS NULL\n      ORDER BY p.bumped_at DESC, p.id DESC\n      LIMIT ${i.PER_PAGE} OFFSET ${Math.max(0,Math.floor(e))*i.PER_PAGE}`,{rows:r}=await this.allAsync(o,[t]);return r.map(this.convertDtoToModel)}async read(t){const{row:e}=await this.getAsync("SELECT\n        p.*,\n        b.id as board_id, b.slug as board_slug, b.title as board_title, b.created_at as board_created_at, b.post_count as board_post_count\n      FROM posts p\n      INNER JOIN boards b ON b.id = p.board_id\n      WHERE p.id = ? AND p.parent_id IS NULL\n      ORDER BY p.id DESC\n      LIMIT 1",[t]);return null===e?null:this.convertDtoToModel(e)}async incrementPostCount(t){return null===await this.read(t)?null:(await this.runAsync("UPDATE posts\n      SET post_count = post_count + 1\n      WHERE id = ?",[t]),await this.read(t))}async bumpThread(t){return null===await this.read(t)?null:(await this.runAsync("UPDATE posts\n      SET bumped_at = strftime('%s','now')\n      WHERE id = ?",[t]),await this.read(t))}async add(t,e,o,r){const a=await this.runAsync("INSERT INTO posts(board_id, parent_id, name, message, ip, post_count, created_at, bumped_at)\n      VALUES (?, NULL, ?, ?, ?, 1, strftime('%s','now'), strftime('%s','now'))",[t,e,o,r]);return this.read(a.lastID)}async delete(t){const e=await this.read(t);return null===e?null:(await this.runAsync("DELETE FROM posts\n      WHERE id = ? AND parent_id IS NULL",[t]),e)}convertDtoToModel(t){return new a.default(+t.id,new r.default(+t.board_id,t.board_slug,t.board_title,new Date(+t.board_created_at*i.MS_IN_SECOND),+t.board_post_count),t.name,t.message,t.ip,+t.post_count,new Date(t.created_at*i.MS_IN_SECOND),new Date(t.bumped_at*i.MS_IN_SECOND))}}e.ThreadRepository=i,i.PER_PAGE=10,i.MS_IN_SECOND=1e3,e.default=i},142:t=>{t.exports=require("dotenv")},406:t=>{t.exports=require("koa")},155:t=>{t.exports=require("koa-bodyparser")},752:t=>{t.exports=require("koa-router")},661:t=>{t.exports=require("sqlite3")},685:t=>{t.exports=require("http")},282:t=>{t.exports=require("process")}},e={};function o(r){var a=e[r];if(void 0!==a)return a.exports;var s=e[r]={exports:{}};return t[r](s,s.exports,o),s.exports}(()=>{const t=o(685),e=o(406),r=o(155),a=o(752),s=o(661),i=o(913),d=o(244),n=o(762),l=o(356),u=o(364),h=o(250),c=o(417),p=o(343),E=o(697),w=o(482),b=o(59),_=o(320),y=o(451),g=o(801),m=new s.Database(i.default.db.path,s.OPEN_CREATE|s.OPEN_READWRITE);(0,_.setupDatabase)(m);const T=new b.default(m),N=new g.default(m),R=new y.default(m),f=new w.default,S=new d.default(T,f),I=new n.default(T,N),M=new l.default(T,N,R),v=new h.default(T,N),A=new c.default(T,N,R),O=new u.default(T,N,R),D=new a;D.get("/api/v1/boards",S.index),D.post("/api/v1/boards",S.create),D.get("/api/v1/boards/:slug",S.show),D.put("/api/v1/boards/:slug",(0,p.auth)(),S.update),D.delete("/api/v1/boards/:slug",(0,p.auth)(),S.delete),D.get("/api/v1/boards/:slug/threads",I.index),D.post("/api/v1/boards/:slug/threads",I.create),D.get("/api/v1/boards/:slug/threads/:threadId",I.show),D.delete("/api/v1/boards/:slug/threads/:threadId",(0,p.auth)(),I.delete),D.get("/api/v1/boards/:slug/threads/:threadId/posts",M.index),D.post("/api/v1/boards/:slug/threads/:threadId/posts",M.create),D.get("/api/v1/boards/:slug/threads/:threadId/posts/:id",M.show),D.delete("/api/v1/boards/:slug/threads/:threadId/posts/:id",(0,p.auth)(),M.delete),D.get("/api/v1/threads",v.index),D.post("/api/v1/threads",v.create),D.get("/api/v1/threads/:threadId",v.show),D.delete("/api/v1/threads/:threadId",(0,p.auth)(),v.delete),D.get("/api/v1/threads/:threadId/posts",A.index),D.post("/api/v1/threads/:threadId/posts",A.create),D.get("/api/v1/threads/:threadId/posts/:id",A.show),D.delete("/api/v1/threads/:threadId/posts/:id",(0,p.auth)(),A.delete),D.get("/api/v1/posts",O.index),D.post("/api/v1/posts",O.create),D.get("/api/v1/posts/:id",O.show),D.delete("/api/v1/posts/:id",O.delete);const L=new e;L.use((0,E.errorHandler)()),L.use(r()),L.use(D.routes()),L.use(D.allowedMethods()),t.createServer(L.callback()).listen(i.default.http.port)})()})();