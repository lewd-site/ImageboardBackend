(()=>{"use strict";var t={752:function(t,e,r){var s=this&&this.__importDefault||function(t){return t&&t.__esModule?t:{default:t}};Object.defineProperty(e,"__esModule",{value:!0}),e.createApp=void 0;const a=s(r(406)),o=s(r(155)),n=s(r(741)),i=s(r(244)),d=s(r(250)),l=s(r(364)),u=s(r(718)),p=s(r(391)),c=r(343),h=r(697),E=s(r(482)),_=s(r(59)),b=s(r(627)),w=s(r(451)),g=s(r(801)),f=r(7);e.createApp=function(t){const e=new _.default(t),r=new b.default(t),s=new g.default(t,r),y=new w.default(t,r),N=new E.default,T=new f.WakabaTripcodeGenerator,m=new u.default,I=new p.default,R=new i.default(e,N),x=new d.default(e,s,T,m,I),O=new l.default(e,s,y,T,m,I),S=new n.default;S.get("/api/v1/boards/:slug/threads/:threadId/posts",O.index),S.post("/api/v1/boards/:slug/threads/:threadId/posts",O.create),S.get("/api/v1/boards/:slug/threads/:threadId/posts/:id",O.show),S.delete("/api/v1/boards/:slug/threads/:threadId/posts/:id",(0,c.auth)(),O.delete),S.get("/api/v1/boards/:slug/threads",x.index),S.post("/api/v1/boards/:slug/threads",x.create),S.get("/api/v1/boards/:slug/threads/:threadId",x.show),S.delete("/api/v1/boards/:slug/threads/:threadId",(0,c.auth)(),x.delete),S.get("/api/v1/boards/:slug/posts",O.index),S.post("/api/v1/boards/:slug/posts",O.create),S.get("/api/v1/boards/:slug/posts/:id",O.show),S.delete("/api/v1/boards/:slug/posts/:id",(0,c.auth)(),O.delete),S.get("/api/v1/boards",R.index),S.post("/api/v1/boards",R.create),S.get("/api/v1/boards/:slug",R.show),S.put("/api/v1/boards/:slug",(0,c.auth)(),R.update),S.delete("/api/v1/boards/:slug",(0,c.auth)(),R.delete),S.get("/api/v1/threads/:threadId/posts",O.index),S.post("/api/v1/threads/:threadId/posts",O.create),S.get("/api/v1/threads/:threadId/posts/:id",O.show),S.delete("/api/v1/threads/:threadId/posts/:id",(0,c.auth)(),O.delete),S.get("/api/v1/threads",x.index),S.post("/api/v1/threads",x.create),S.get("/api/v1/threads/:threadId",x.show),S.delete("/api/v1/threads/:threadId",(0,c.auth)(),x.delete),S.get("/api/v1/posts",O.index),S.post("/api/v1/posts",O.create),S.get("/api/v1/posts/:id",O.show),S.delete("/api/v1/posts/:id",(0,c.auth)(),O.delete);const M=new a.default;return M.use((0,h.errorHandler)()),M.use((0,o.default)()),M.use(S.routes()),M.use(S.allowedMethods()),M}},913:function(t,e,r){var s=this&&this.__importDefault||function(t){return t&&t.__esModule?t:{default:t}};Object.defineProperty(e,"__esModule",{value:!0}),e.config=void 0;const a=s(r(142)),o=r(282);a.default.config(),e.config={auth:{token:o.env.AUTH_TOKEN||""},db:{path:o.env.DB_PATH||":memory:"},http:{port:+(o.env.HTTP_PORT||3e3)}},e.default=e.config},244:(t,e,r)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.BoardController=void 0;const s=r(758);class a{constructor(t,e){this.boardRepository=t,this.boardManager=e,this.index=async t=>{const e=+(t.query.page||0),r=await this.boardRepository.browse(e);t.body={items:r.map(this.convertModelToDto)}},this.show=async t=>{const e=String(t.params.slug||"").trim(),r=await this.boardRepository.readBySlug(e);if(null===r)throw new s.NotFoundError("slug");t.body={item:this.convertModelToDto(r)}},this.create=async t=>{const e=String(t.request.body.slug||"").trim(),r=String(t.request.body.title||"").trim(),a=await this.boardManager.createBoard(this.boardRepository,e,r);if(null===a)throw new s.NotFoundError("slug");t.status=201,t.set("Location",`/api/v1/boards/${a.slug}`),t.body={item:this.convertModelToDto(a)}},this.update=async t=>{const e=String(t.params.slug||"").trim(),r=String(t.request.body.slug||"").trim(),a=String(t.request.body.title||"").trim(),o=await this.boardManager.updateBoard(this.boardRepository,e,r,a);if(null===o)throw new s.NotFoundError("slug");t.body={item:this.convertModelToDto(o)}},this.delete=async t=>{const e=String(t.params.slug||"").trim(),r=await this.boardManager.deleteBoard(this.boardRepository,e);if(null===r)throw new s.NotFoundError("slug");t.body={item:this.convertModelToDto(r)}}}convertModelToDto(t){return{slug:t.slug,title:t.title,created_at:t.createdAt.toISOString(),post_count:+t.postCount}}}e.BoardController=a,e.default=a},364:(t,e,r)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.PostController=void 0;const s=r(758);class a{constructor(t,e,r,a,o,n){this.boardRepository=t,this.threadRepository=e,this.postRepository=r,this.tripcodeGenerator=a,this.tokenizer=o,this.parser=n,this.index=async t=>{const e=+(t.params.threadId||0);if(0!==e){const r=await this.threadRepository.read(e);if(null===r)throw new s.NotFoundError("threadId");const a=String(t.params.slug||"").trim();if(a.length){const t=await this.boardRepository.readBySlug(a);if(null===t||t.id!==r.board.id)throw new s.NotFoundError("slug")}const o=await this.postRepository.browseForThread(e);return t.body={items:o.map(this.convertModelToDto)}}const r=String(t.params.slug||"").trim();if(r.length&&null===await this.boardRepository.readBySlug(r))throw new s.NotFoundError("slug");const a=await this.postRepository.browse();t.body={items:a.map(this.convertModelToDto)}},this.show=async t=>{const e=+(t.params.id||0),r=await this.postRepository.read(e);if(null===r)throw new s.NotFoundError("id");const a=+(t.params.threadId||0);if(0!==a){const t=await this.threadRepository.read(a);if(null===t||t.id!==r.parentId)throw new s.NotFoundError("threadId")}const o=String(t.params.slug||"").trim();if(o.length){const t=await this.boardRepository.readBySlug(o);if(null===t||t.id!==r.board.id)throw new s.NotFoundError("slug")}t.body={item:this.convertModelToDto(r)}},this.create=async t=>{const e=+(t.params.threadId||t.request.body.parentId||0),r=await this.threadRepository.read(e);if(null===r)throw new s.NotFoundError("threadId");const a=String(t.params.slug||"").trim();if(a.length){const t=await this.boardRepository.readBySlug(a);if(null===t||t.id!==r.board.id)throw new s.NotFoundError("slug")}const o=String(t.request.body.name||""),n=String(t.request.body.message||""),i=t.request.ip,d=await r.createPost(this.boardRepository,this.threadRepository,this.postRepository,this.tripcodeGenerator,this.tokenizer,this.parser,o,n,i);t.status=201,t.set("Location",`/api/v1/boards/${r.board.slug}/threads/${r.id}/posts/${d.id}`),t.body={item:this.convertModelToDto(d)}},this.delete=async t=>{const e=+(t.params.id||0),r=await this.postRepository.read(e);if(null===r)throw new s.NotFoundError("id");const a=+(t.params.threadId||r.parentId||0),o=await this.threadRepository.read(a);if(null===o||o.id!==r.parentId)throw new s.NotFoundError("threadId");const n=String(t.params.slug||"").trim();if(n.length){const t=await this.boardRepository.readBySlug(n);if(null===t||t.id!==r.board.id)throw new s.NotFoundError("slug")}const i=await o.deletePost(this.postRepository,e);t.body={item:this.convertModelToDto(i)}}}convertModelToDto(t){return{id:+t.id,slug:t.board.slug,parent_id:+t.parentId,name:t.name,tripcode:t.tripcode,message:t.message,message_parsed:t.parsedMessage,created_at:t.createdAt.toISOString()}}}e.PostController=a,e.default=a},250:(t,e,r)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.ThreadController=void 0;const s=r(758);class a{constructor(t,e,r,a,o){this.boardRepository=t,this.threadRepository=e,this.tripcodeGenerator=r,this.tokenizer=a,this.parser=o,this.index=async t=>{const e=String(t.params.slug||"").trim();if(e.length){const r=await this.boardRepository.readBySlug(e);if(null===r)throw new s.NotFoundError("slug");const a=+(t.query.page||0),o=await this.threadRepository.browseForBoard(r.id,a);return t.body={items:o.map(this.convertModelToDto)}}const r=+(t.query.page||0),a=await this.threadRepository.browse(r);t.body={items:a.map(this.convertModelToDto)}},this.show=async t=>{const e=+(t.params.threadId||0),r=await this.threadRepository.read(e);if(null===r)throw new s.NotFoundError("threadId");const a=String(t.params.slug||"").trim();if(a.length){const t=await this.boardRepository.readBySlug(a);if(null===t||t.id!==r.board.id)throw new s.NotFoundError("slug")}t.body={item:this.convertModelToDto(r)}},this.create=async t=>{const e=String(t.params.slug||t.request.body.slug||"").trim(),r=await this.boardRepository.readBySlug(e);if(null===r)throw new s.NotFoundError("slug");const a=String(t.request.body.subject||""),o=String(t.request.body.name||""),n=String(t.request.body.message||""),i=t.request.ip,d=await r.createThread(this.boardRepository,this.threadRepository,this.tripcodeGenerator,this.tokenizer,this.parser,a,o,n,i);t.status=201,t.set("Location",`/api/v1/boards/${r.slug}/threads/${d.id}`),t.body={item:this.convertModelToDto(d)}},this.delete=async t=>{const e=+(t.params.threadId||0),r=await this.threadRepository.read(e);if(null===r)throw new s.NotFoundError("threadId");const a=String(t.params.slug||r.board.slug||"").trim(),o=await this.boardRepository.readBySlug(a);if(null===o||o.id!==r.board.id)throw new s.NotFoundError("slug");const n=await o.deleteThread(this.threadRepository,e);t.body={item:this.convertModelToDto(n)}}}convertModelToDto(t){return{id:+t.id,slug:t.board.slug,subject:t.subject,name:t.name,tripcode:t.tripcode,message:t.message,message_parsed:t.parsedMessage,post_count:+t.postCount,created_at:t.createdAt.toISOString(),bumped_at:t.bumpedAt.toISOString()}}}e.ThreadController=a,e.default=a},758:(t,e)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.ConflictError=e.NotFoundError=e.NotAuthenticatedError=e.ValidationError=void 0;class r extends Error{constructor(t,e,r){super(r),this.field=t,this.error=e}}e.ValidationError=r;class s extends Error{}e.NotAuthenticatedError=s;class a extends Error{constructor(t,e){super(e),this.field=t}}e.NotFoundError=a;class o extends Error{constructor(t,e){super(e),this.field=t}}e.ConflictError=o},607:function(t,e,r){var s=this&&this.__importDefault||function(t){return t&&t.__esModule?t:{default:t}};Object.defineProperty(e,"__esModule",{value:!0});const a=s(r(685)),o=s(r(661)),n=r(752),i=s(r(913)),d=r(320),l=new o.default.Database(i.default.db.path,o.default.OPEN_CREATE|o.default.OPEN_READWRITE);(0,d.setupDatabase)(l);const u=(0,n.createApp)(l);a.default.createServer(u.callback()).listen(i.default.http.port)},391:(t,e)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.Parser=void 0;class r{parse(t){const e=this.getStyleSpans(t),s=t.filter((t=>-1!==r._textTokenTypes.indexOf(t.type))).map((t=>{let r;switch(t.type){case"text":default:r={type:"text",text:t.text};break;case"newline":r={type:"newline"};break;case"quote":r={type:"style",style:"quote",value:t.quote,children:[{type:"text",text:t.text}]};break;case"reflink":r={type:"reflink",postID:t.postID,threadID:t.threadID};break;case"link":r={type:"link",text:t.text,url:t.url,icon:t.icon}}const s=e.filter((e=>t.index>=e.startIndex&&t.index<=e.endIndex));for(let t=s.length-1;t>=0;t--){const e=s[t];r={type:"style",style:e.style,value:e.value,children:[r]}}return r}));return this.mergeNodes(s)}getStyleSpans(t){let e=[];const r=[];return t.forEach((t=>{switch(t.type){case"bb_start":r.push({type:"bb",startIndex:t.index,tag:t.tag,value:t.value});break;case"bb_end":for(let s=r.length-1;s>=0;s--){const a=r[s];let o;if("bb"===a.type&&a.tag===t.tag){switch(a.tag){case"b":o="bold";break;case"i":o="italic";break;case"u":o="underline";break;case"s":o="strike";break;case"sup":o="superscript";break;case"sub":o="subscript";break;case"spoiler":o="spoiler";break;case"code":o="code";break;case"color":o="color";break;case"size":o="size";break;default:throw new Error(`Unknown tag: ${a.tag}`)}e.push({startIndex:a.startIndex,endIndex:t.index,style:o,value:a.value}),r.splice(s,1);break}}break;case"wm_start":r.push({type:"wm",startIndex:t.index,text:t.text});break;case"wm_end":for(let s=r.length-1;s>=0;s--){const a=r[s];let o;if("wm"===a.type&&a.text===t.text){switch(a.text){case"**":o="bold";break;case"*":o="italic";break;case"~~":o="strike";break;case"%%":o="spoiler";break;default:throw console.log(a),new Error(`Unknown tag: ${a.text}`)}e.push({startIndex:a.startIndex,endIndex:t.index,style:o}),r.splice(s,1);break}}}})),e=this.fixOverlaps(e),e.sort(((t,e)=>t.startIndex===e.startIndex?t.endIndex-e.endIndex:t.startIndex-e.startIndex)),e}fixOverlaps(t){for(let e=0;e<t.length-1;e++)for(let r=e+1;r<t.length;r++){const s=t[e],a=t[r];s.startIndex<a.startIndex&&s.endIndex>a.startIndex&&s.endIndex<a.endIndex?(t[e]={...s,endIndex:a.startIndex},t.push({...s,startIndex:a.startIndex})):a.startIndex>a.startIndex&&a.startIndex<s.startIndex&&a.endIndex>a.endIndex&&(t[r]={...a,endIndex:s.endIndex},t.push({...a,startIndex:s.endIndex}))}return t}mergeNodes(t){for(let e=0;e<t.length-1;e++){const r=t[e],s=t[e+1];if("style"===r.type&&"style"===s.type&&r.style===s.style&&r.value===s.value){const{style:a,value:o}=r,n=this.mergeNodes([...r.children,...s.children]);t[e]={type:"style",style:a,value:o,children:n},t.splice(e+1,1),e--}else if("text"===r.type&&"text"===s.type){const a=r.text+s.text;t[e]={type:"text",text:a},t.splice(e+1,1),e--}}return t}}e.Parser=r,r._textTokenTypes=["text","newline","quote","reflink","link"],e.default=r},718:(t,e)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.Tokenizer=void 0;class r{tokenize(t){const e=(t=t.replace(r._carriageReturnRegExp,"")).split(r._tokenRegExp).filter((t=>t.length)),s=[];let a=[],o=0;return e.forEach((t=>{let e=null;if(null!==t.match(/^\n$/))a.push({type:"newline",index:o,text:t});else if(null!==(e=t.match(/^>>(\d+)$/))){const r=+e[1];a.push({type:"reflink",index:o,text:t,postID:r})}else if(null!==(e=t.match(/^>(.*?)$/))){const r=e[1];a.push({type:"quote",index:o,text:t,quote:r})}else if(null!==t.match(/^(\*\*|\*|%%|~~)$/)){const e=s.indexOf(t);-1===e?(s.push(t),a.push({type:"wm_start",index:o,text:t})):(s.splice(e,1),a.push({type:"wm_end",index:o,text:t}))}else if(null!==(e=t.match(/^\[([bius]|su[pb]|spoiler)]$/i))){const r=e[1];a.push({type:"bb_start",index:o,text:t,tag:r})}else if(null!==(e=t.match(/^\[(color)=(#(?:[0-9a-f]{3,4}|[0-9a-f]{6}|[0-9a-f]{8}))]$/i))){const r=e[1],s=e[2];a.push({type:"bb_start",index:o,text:t,tag:r,value:s})}else if(null!==(e=t.match(/^\[(size)=([1-9]\d?)]$/i))){const r=e[1],s=e[2];a.push({type:"bb_start",index:o,text:t,tag:r,value:s})}else if(null!==(e=t.match(/^\[\/([bius]|su[pb]|spoiler|color|size)]$/i))){const r=e[1];a.push({type:"bb_end",index:o,text:t,tag:r})}else if(null!==(e=t.match(/^\[code]([\s\S]*?)\[\/code]$/i))){const t="code",r=e[1];a.push({type:"bb_start",index:o,text:"[code]",tag:t}),o++,a.push({type:"text",index:o,text:r}),o++,a.push({type:"bb_end",index:o,text:"[/code]",tag:t})}else if(null!==(e=t.match(new RegExp(`^(${r._urlPattern})$`,"i")))){const r=e[1];a.push({type:"link",index:o,text:t,url:r})}else a.push({type:"text",index:o,text:t});o++})),a=this.convertUnpairedTagsToText(a),this.mergeTokens(a)}convertUnpairedTagsToText(t){const e=[],r=[];return t.forEach(((s,a)=>{switch(s.type){case"bb_start":e.push({...s,index:a});break;case"bb_end":{let r=!1;for(let t=e.length-1;t>=0;t--)if(e[t].tag===s.tag){r=!0,e.splice(t,1);break}r||(t[a]={type:"text",index:a,text:s.text})}break;case"wm_start":r.push({...s,index:a});break;case"wm_end":{let e=!1;for(let t=r.length-1;t>=0;t--)if(r[t].text===s.text){e=!0,r.splice(t,1);break}e||(t[a]={type:"text",index:a,text:s.text})}}})),e.forEach((e=>{t[e.index]={type:"text",index:e.index,text:e.text}})),r.forEach((e=>{t[e.index]={type:"text",index:e.index,text:e.text}})),t}mergeTokens(t){for(let e=0;e<t.length-1;e++){const r=t[e],s=t[e+1];if("text"===r.type&&"text"===s.type){const a=r.text+s.text,{index:o}=r;t[e]={type:"text",index:o,text:a},t.splice(e+1,1),e--}}return t}}e.Tokenizer=r,r._urlPattern="https?:\\/\\/(?:[^?#@[\\]\\s]+@)?(?:[^.[\\]\\s-][^?#\\/[\\]\\s]*|\\[[0-9a-f:]+](?::\\d+)?)(?:\\/[^\\/?#[\\]\\s]*)*(?:\\?[^#[\\]\\s]+)?(?:#[^[\\]\\s]+)?",r._tokenPattern="(\\[code][\\s\\S]*?\\[\\/code]|\\[(?:[bius]|su[pb]|spoiler)]|\\[color=#(?:[0-9a-f]{3,4}|[0-9a-f]{6}|[0-9a-f]{8})]|\\[size=[1-9]\\d?]|\\[\\/(?:[bius]|su[pb]|spoiler|color|size)]|>>\\d+|^>.*?$|\\*\\*|\\*|%%|~~|\\n|"+r._urlPattern+")",r._carriageReturnRegExp=new RegExp("\r","g"),r._urlRegExp=new RegExp(r._urlPattern,"ig"),r._tokenRegExp=new RegExp(r._tokenPattern,"img"),e.default=r},343:function(t,e,r){var s=this&&this.__importDefault||function(t){return t&&t.__esModule?t:{default:t}};Object.defineProperty(e,"__esModule",{value:!0}),e.auth=void 0;const a=s(r(913)),o=r(758);e.auth=function(){return async function(t,e){if(t.get("Authorization")!==`Bearer ${a.default.auth.token}`)throw new o.NotAuthenticatedError;await e()}}},697:(t,e,r)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.errorHandler=void 0;const s=r(758);e.errorHandler=function(){return async function(t,e){try{await e()}catch(e){e instanceof s.ValidationError?(t.status=400,t.body={status:400,field:e.field,message:e.error}):e instanceof s.NotAuthenticatedError?(t.status=401,t.set("WWW-Authenticate","Bearer"),t.body={status:401,message:"not_authenticated"}):e instanceof s.NotFoundError?(t.status=404,t.body={status:404,field:e.field,message:e.message||"not_found"}):e instanceof s.ConflictError?(t.status=409,t.body={status:409,field:e.field,message:e.message||"conflict"}):(t.status=500,t.body={status:500,message:"internal_server_error"},console.error(e))}}}},482:function(t,e,r){var s=this&&this.__importDefault||function(t){return t&&t.__esModule?t:{default:t}};Object.defineProperty(e,"__esModule",{value:!0}),e.BoardManager=void 0;const a=r(758),o=s(r(812));class n{async createBoard(t,e,r){if(!e.length)throw new a.ValidationError("slug","required");if(e.length>o.default.MAX_SLUG_LENGTH)throw new a.ValidationError("slug","max-length");if(null===e.match(o.default.SLUG_PATTERN))throw new a.ValidationError("slug","pattern");if(!r.length)throw new a.ValidationError("title","required");if(e.length>o.default.MAX_TITLE_LENGTH)throw new a.ValidationError("title","max-length");if(-1!==o.default.RESERVED_NAMES.indexOf(e))throw new a.ConflictError("slug");if(null!==await t.readBySlug(e))throw new a.ConflictError("slug");const s=await t.add(e,r);if(null===s)throw new a.NotFoundError("slug");return s}async updateBoard(t,e,r,s){if(!r.length)throw new a.ValidationError("slug","required");if(r.length>o.default.MAX_SLUG_LENGTH)throw new a.ValidationError("slug","max-length");if(null===r.match(o.default.SLUG_PATTERN))throw new a.ValidationError("slug","pattern");if(!s.length)throw new a.ValidationError("title","required");if(r.length>o.default.MAX_TITLE_LENGTH)throw new a.ValidationError("title","max-length");if(-1!==o.default.RESERVED_NAMES.indexOf(r))throw new a.ConflictError("slug");let n=await t.readBySlug(e);if(null===n)throw new a.NotFoundError("slug");if(n=await t.edit(n.id,r,s),null===n)throw new a.NotFoundError("slug");return n}async deleteBoard(t,e){let r=await t.readBySlug(e);if(null===r)throw new a.NotFoundError("slug");if(r=await t.delete(r.id),null===r)throw new a.NotFoundError("slug");return r}}e.BoardManager=n,e.default=n},812:function(t,e,r){var s=this&&this.__importDefault||function(t){return t&&t.__esModule?t:{default:t}};Object.defineProperty(e,"__esModule",{value:!0}),e.Board=void 0;const a=r(758),o=s(r(624));class n{constructor(t,e,r,s,a){this.id=t,this.slug=e,this.title=r,this.createdAt=s,this.postCount=a}async createThread(t,e,r,s,n,i,d,l,u){if(!d.length)throw new a.ValidationError("name","required");if(d.length>o.default.MAX_NAME_LENGTH)throw new a.ValidationError("name","max-length");if(!l.length)throw new a.ValidationError("message","required");if(l.length>o.default.MAX_MESSAGE_LENGTH)throw new a.ValidationError("message","max-length");const p=r.createTripcode(d),c=s.tokenize(l),h=n.parse(c);let E=null;try{await e.begin(),E=await e.add(this.id,i,p.name,p.tripcode,l,h,u),await t.incrementPostCount(this.id),await e.commit()}catch(t){throw await e.rollback(),t}if(null===E)throw new a.NotFoundError("id");return E}async deleteThread(t,e){let r=await t.read(e);if(null===r||r.board.id!==this.id)throw new a.NotFoundError("threadId");if(r=await t.delete(e),null===r)throw new a.NotFoundError("threadId");return r}}e.Board=n,n.MAX_SLUG_LENGTH=20,n.MAX_TITLE_LENGTH=100,n.SLUG_PATTERN=/^[0-9a-z_-]+$/,n.RESERVED_NAMES=["admin","api","dashboard","settings","sse","ws"],e.default=n},894:(t,e)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.Post=void 0;class r{constructor(t,e,r,s,a,o,n,i,d){this.id=t,this.board=e,this.parentId=r,this.name=s,this.tripcode=a,this.message=o,this.parsedMessage=n,this.ip=i,this.createdAt=d}}e.Post=r,r.MAX_NAME_LENGTH=40,r.MAX_MESSAGE_LENGTH=8e3,e.default=r},624:(t,e,r)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.Thread=void 0;const s=r(758);class a{constructor(t,e,r,s,a,o,n,i,d,l,u){this.id=t,this.board=e,this.subject=r,this.name=s,this.tripcode=a,this.message=o,this.parsedMessage=n,this.ip=i,this.postCount=d,this.createdAt=l,this.bumpedAt=u}async createPost(t,e,r,o,n,i,d,l,u){if(!d.length)throw new s.ValidationError("name","required");if(d.length>a.MAX_NAME_LENGTH)throw new s.ValidationError("name","max-length");if(!l.length)throw new s.ValidationError("message","required");if(l.length>a.MAX_MESSAGE_LENGTH)throw new s.ValidationError("message","max-length");const p=o.createTripcode(d),c=n.tokenize(l),h=i.parse(c);let E=null;try{await r.begin(),E=await r.add(this.board.id,this.id,p.name,p.tripcode,l,h,u),await t.incrementPostCount(this.board.id),await e.incrementPostCount(this.id),this.postCount<a.BUMP_LIMIT&&await e.bumpThread(this.id),await r.commit()}catch(t){throw await r.rollback(),t}if(null===E)throw new s.NotFoundError("id");return E}async deletePost(t,e){let r=await t.read(e);if(null===r||r.parentId!==this.id)throw new s.NotFoundError("id");if(r=await t.delete(e),null===r)throw new s.NotFoundError("id");return r}}e.Thread=a,a.MAX_NAME_LENGTH=40,a.MAX_MESSAGE_LENGTH=8e3,a.BUMP_LIMIT=500,e.default=a},59:function(t,e,r){var s=this&&this.__importDefault||function(t){return t&&t.__esModule?t:{default:t}};Object.defineProperty(e,"__esModule",{value:!0}),e.BoardRepository=void 0;const a=s(r(812)),o=s(r(251));class n extends o.default{async browse(t=0){const e=`SELECT * FROM boards\n      ORDER BY post_count DESC, id DESC\n      LIMIT ${n.PER_PAGE} OFFSET ${Math.max(0,Math.floor(t))*n.PER_PAGE}`,{rows:r}=await this.allAsync(e);return r.map(this.convertDtoToModel)}async read(t){const{row:e}=await this.getAsync("SELECT * FROM boards\n      WHERE id = ?\n      ORDER BY id DESC\n      LIMIT 1",[t]);return null===e?null:this.convertDtoToModel(e)}async readBySlug(t){const{row:e}=await this.getAsync("SELECT * FROM boards\n      WHERE slug = ?\n      ORDER BY id DESC\n      LIMIT 1",[t]);return null===e?null:this.convertDtoToModel(e)}async edit(t,e,r){return null===await this.read(t)?null:(await this.runAsync("UPDATE boards\n      SET slug = ?, title = ?\n      WHERE id = ?",[e,r,t]),this.readBySlug(e))}async incrementPostCount(t){return null===await this.read(t)?null:(await this.runAsync("UPDATE boards\n      SET post_count = post_count + 1\n      WHERE id = ?",[t]),await this.read(t))}async add(t,e){return await this.runAsync("INSERT INTO boards(slug, title, post_count, created_at)\n      VALUES (?, ?, 0, strftime('%s','now'))",[t,e]),this.readBySlug(t)}async delete(t){const e=await this.read(t);return null===e?null:(await this.runAsync("DELETE FROM boards\n      WHERE id = ?",[t]),e)}convertDtoToModel(t){return new a.default(+t.id,t.slug,t.title,new Date(t.created_at*n.MS_IN_SECOND),+t.post_count)}}e.BoardRepository=n,n.PER_PAGE=100,n.MS_IN_SECOND=1e3,e.default=n},320:(t,e)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.setupDatabase=void 0,e.setupDatabase=function(t){t.serialize((()=>{t.run("CREATE TABLE IF NOT EXISTS boards (\n      id INTEGER NOT NULL PRIMARY KEY,\n      slug TEXT NOT NULL UNIQUE,\n      title TEXT NOT NULL,\n      post_count INTEGER NOT NULL,\n      created_at INTEGER NOT NULL\n    )"),t.run("CREATE INDEX IF NOT EXISTS boards_post_count_idx ON boards (post_count)"),t.run("CREATE TABLE IF NOT EXISTS names (\n      id INTEGER NOT NULL PRIMARY KEY,\n      name TEXT NOT NULL UNIQUE\n    )"),t.run("CREATE TABLE IF NOT EXISTS tripcodes (\n      id INTEGER NOT NULL PRIMARY KEY,\n      tripcode TEXT NOT NULL UNIQUE\n    )"),t.run("CREATE TABLE IF NOT EXISTS ips (\n      id INTEGER NOT NULL PRIMARY KEY,\n      ip TEXT NOT NULL UNIQUE\n    )"),t.run("CREATE TABLE IF NOT EXISTS posts (\n      id INTEGER NOT NULL PRIMARY KEY,\n      board_id INTEGER NOT NULL REFERENCES boards (id) ON DELETE CASCADE,\n      parent_id INTEGER REFERENCES posts (id) ON DELETE CASCADE,\n      subject TEXT,\n      name_id INTEGER REFERENCES names (id) ON DELETE RESTRICT,\n      tripcode_id INTEGER REFERENCES tripcodes (id) ON DELETE RESTRICT,\n      message TEXT NOT NULL,\n      message_parsed TEXT NOT NULL,\n      ip_id INTEGER NOT NULL REFERENCES ips (id) ON DELETE RESTRICT,\n      created_at INTEGER NOT NULL,\n      bumped_at INTEGER,\n      post_count INTEGER\n    )"),t.run("CREATE INDEX IF NOT EXISTS posts_board_id_idx ON posts (board_id)"),t.run("CREATE INDEX IF NOT EXISTS posts_parent_id_idx ON posts (parent_id)"),t.run("CREATE INDEX IF NOT EXISTS posts_bumped_at_idx ON posts (bumped_at)")}))}},627:function(t,e,r){var s=this&&this.__importDefault||function(t){return t&&t.__esModule?t:{default:t}};Object.defineProperty(e,"__esModule",{value:!0}),e.PostAttributesRepository=void 0;const a=s(r(251));class o extends a.default{async readOrAddName(t){const e=await this.readName(t);return null===e?this.addName(t):e}async readName(t){const{row:e}=await this.getAsync("SELECT id FROM names WHERE name = ?",[t]);return null===e?null:e.id}async addName(t){return(await this.runAsync("INSERT INTO names (name) VALUES (?)",[t])).lastID}async readOrAddTripcode(t){const e=await this.readTripcode(t);return null===e?this.addTripcode(t):e}async readTripcode(t){const{row:e}=await this.getAsync("SELECT id FROM tripcodes WHERE tripcode = ?",[t]);return null===e?null:e.id}async addTripcode(t){return(await this.runAsync("INSERT INTO tripcodes (tripcode) VALUES (?)",[t])).lastID}async readOrAddIp(t){const e=await this.readIp(t);return null===e?this.addIp(t):e}async readIp(t){const{row:e}=await this.getAsync("SELECT id FROM ips WHERE ip = ?",[t]);return null===e?null:e.id}async addIp(t){return(await this.runAsync("INSERT INTO ips (ip) VALUES (?)",[t])).lastID}}e.PostAttributesRepository=o,e.default=o},451:function(t,e,r){var s=this&&this.__importDefault||function(t){return t&&t.__esModule?t:{default:t}};Object.defineProperty(e,"__esModule",{value:!0}),e.PostRepository=void 0;const a=s(r(812)),o=s(r(894)),n=s(r(251));class i extends n.default{constructor(t,e){super(t),this.postAttributesRepository=e}async browse(){const{rows:t}=await this.allAsync("SELECT\n        p.*,\n        b.id as board_id, b.slug as board_slug, b.title as board_title, b.created_at as board_created_at, b.post_count as board_post_count,\n        n.name,\n        t.tripcode,\n        i.ip\n      FROM posts p\n      INNER JOIN boards b ON b.id = p.board_id\n      LEFT JOIN names n ON n.id = p.name_id\n      LEFT JOIN tripcodes t ON t.id = p.tripcode_id\n      INNER JOIN ips i ON i.id = p.ip_id\n      ORDER BY p.id");return t.map(this.convertDtoToModel)}async browseForThread(t){const{rows:e}=await this.allAsync("SELECT\n        p.*,\n        b.id as board_id, b.slug as board_slug, b.title as board_title, b.created_at as board_created_at, b.post_count as board_post_count,\n        n.name,\n        t.tripcode,\n        i.ip\n      FROM posts p\n      INNER JOIN boards b ON b.id = p.board_id\n      LEFT JOIN names n ON n.id = p.name_id\n      LEFT JOIN tripcodes t ON t.id = p.tripcode_id\n      INNER JOIN ips i ON i.id = p.ip_id\n      WHERE p.parent_id = ? OR p.id = ?\n      ORDER BY p.id",[t,t]);return e.map(this.convertDtoToModel)}async read(t){const{row:e}=await this.getAsync("SELECT\n        p.*,\n        b.id as board_id, b.slug as board_slug, b.title as board_title, b.created_at as board_created_at, b.post_count as board_post_count,\n        n.name,\n        t.tripcode,\n        i.ip\n      FROM posts p\n      INNER JOIN boards b ON b.id = p.board_id\n      LEFT JOIN names n ON n.id = p.name_id\n      LEFT JOIN tripcodes t ON t.id = p.tripcode_id\n      INNER JOIN ips i ON i.id = p.ip_id\n      WHERE p.id = ?\n      ORDER BY p.id DESC\n      LIMIT 1",[t]);return null===e?null:this.convertDtoToModel(e)}async add(t,e,r,s,a,o,n){const i=await this.runAsync("INSERT INTO posts(board_id, parent_id, name_id, tripcode_id, message, message_parsed, ip_id, created_at, bumped_at)\n      VALUES (?, ?, ?, ?, ?, ?, ?, strftime('%s','now'), NULL)",[t,e,r.length?await this.postAttributesRepository.readOrAddName(r):null,s.length?await this.postAttributesRepository.readOrAddTripcode(s):null,a,JSON.stringify(o),await this.postAttributesRepository.readOrAddIp(n)]);return this.read(i.lastID)}async delete(t){const e=await this.read(t);return null===e?null:(await this.runAsync("DELETE FROM posts\n      WHERE id = ? AND parent_id IS NOT NULL",[t]),e)}convertDtoToModel(t){return new o.default(+t.id,new a.default(+t.board_id,t.board_slug,t.board_title,new Date(+t.board_created_at*i.MS_IN_SECOND),+t.board_post_count),+(t.parent_id||0),t.name,t.tripcode,t.message,JSON.parse(t.message_parsed),t.ip,new Date(t.created_at*i.MS_IN_SECOND))}}e.PostRepository=i,i.PER_PAGE=100,i.MS_IN_SECOND=1e3,e.default=i},251:(t,e)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.Repository=void 0;class r{constructor(t){this.db=t}async begin(){await this.runAsync("BEGIN")}async commit(){await this.runAsync("COMMIT")}async rollback(){await this.runAsync("ROLLBACK")}async runAsync(t,e=[]){return new Promise(((r,s)=>{this.db.run(t,e,(function(t){if(null!==t)return s(t);r(this)}))}))}async getAsync(t,e=[]){return new Promise(((r,s)=>{this.db.get(t,e,(function(t,e){return null!==t?s(t):void 0===e?r({statement:this,row:null}):void r({statement:this,row:e})}))}))}async allAsync(t,e=[]){return new Promise(((r,s)=>{this.db.all(t,e,(function(t,e){if(null!==t)return s(t);r({statement:this,rows:e})}))}))}}e.Repository=r,e.default=r},801:function(t,e,r){var s=this&&this.__importDefault||function(t){return t&&t.__esModule?t:{default:t}};Object.defineProperty(e,"__esModule",{value:!0}),e.ThreadRepository=void 0;const a=s(r(812)),o=s(r(624)),n=s(r(251));class i extends n.default{constructor(t,e){super(t),this.postAttributesRepository=e}async browse(t=0){const e=`SELECT\n        p.*,\n        b.id as board_id, b.slug as board_slug, b.title as board_title, b.created_at as board_created_at, b.post_count as board_post_count,\n        n.name,\n        t.tripcode,\n        i.ip\n      FROM posts p\n      INNER JOIN boards b ON b.id = p.board_id\n      LEFT JOIN names n ON n.id = p.name_id\n      LEFT JOIN tripcodes t ON t.id = p.tripcode_id\n      INNER JOIN ips i ON i.id = p.ip_id\n      WHERE p.parent_id IS NULL\n      ORDER BY p.bumped_at DESC, p.id DESC\n      LIMIT ${i.PER_PAGE} OFFSET ${Math.max(0,Math.floor(t))*i.PER_PAGE}`,{rows:r}=await this.allAsync(e);return r.map(this.convertDtoToModel)}async browseForBoard(t,e=0){const r=`SELECT\n        p.*,\n        b.id as board_id, b.slug as board_slug, b.title as board_title, b.created_at as board_created_at, b.post_count as board_post_count,\n        n.name,\n        t.tripcode,\n        i.ip\n      FROM posts p\n      INNER JOIN boards b ON b.id = p.board_id\n      LEFT JOIN names n ON n.id = p.name_id\n      LEFT JOIN tripcodes t ON t.id = p.tripcode_id\n      INNER JOIN ips i ON i.id = p.ip_id\n      WHERE p.board_id = ? AND p.parent_id IS NULL\n      ORDER BY p.bumped_at DESC, p.id DESC\n      LIMIT ${i.PER_PAGE} OFFSET ${Math.max(0,Math.floor(e))*i.PER_PAGE}`,{rows:s}=await this.allAsync(r,[t]);return s.map(this.convertDtoToModel)}async read(t){const{row:e}=await this.getAsync("SELECT\n        p.*,\n        b.id as board_id, b.slug as board_slug, b.title as board_title, b.created_at as board_created_at, b.post_count as board_post_count,\n        n.name,\n        t.tripcode,\n        i.ip\n      FROM posts p\n      INNER JOIN boards b ON b.id = p.board_id\n      LEFT JOIN names n ON n.id = p.name_id\n      LEFT JOIN tripcodes t ON t.id = p.tripcode_id\n      INNER JOIN ips i ON i.id = p.ip_id\n      WHERE p.id = ? AND p.parent_id IS NULL\n      ORDER BY p.id DESC\n      LIMIT 1",[t]);return null===e?null:this.convertDtoToModel(e)}async incrementPostCount(t){return null===await this.read(t)?null:(await this.runAsync("UPDATE posts\n      SET post_count = post_count + 1\n      WHERE id = ?",[t]),await this.read(t))}async bumpThread(t){return null===await this.read(t)?null:(await this.runAsync("UPDATE posts\n      SET bumped_at = strftime('%s','now')\n      WHERE id = ?",[t]),await this.read(t))}async add(t,e,r,s,a,o,n){const i=await this.runAsync("INSERT INTO posts(board_id, parent_id, subject, name_id, tripcode_id, message, message_parsed, ip_id, post_count, created_at, bumped_at)\n      VALUES (?, NULL, ?, ?, ?, ?, ?, ?, 1, strftime('%s','now'), strftime('%s','now'))",[t,e.length?e:null,r.length?await this.postAttributesRepository.readOrAddName(r):null,s.length?await this.postAttributesRepository.readOrAddTripcode(s):null,a,JSON.stringify(o),await this.postAttributesRepository.readOrAddIp(n)]);return this.read(i.lastID)}async delete(t){const e=await this.read(t);return null===e?null:(await this.runAsync("DELETE FROM posts\n      WHERE id = ? AND parent_id IS NULL",[t]),e)}convertDtoToModel(t){return new o.default(+t.id,new a.default(+t.board_id,t.board_slug,t.board_title,new Date(+t.board_created_at*i.MS_IN_SECOND),+t.board_post_count),t.subject,t.name,t.tripcode,t.message,JSON.parse(t.message_parsed),t.ip,+t.post_count,new Date(t.created_at*i.MS_IN_SECOND),new Date(t.bumped_at*i.MS_IN_SECOND))}}e.ThreadRepository=i,i.PER_PAGE=10,i.MS_IN_SECOND=1e3,e.default=i},7:function(t,e,r){var s=this&&this.__importDefault||function(t){return t&&t.__esModule?t:{default:t}};Object.defineProperty(e,"__esModule",{value:!0}),e.WakabaTripcodeGenerator=void 0;const a=s(r(379));class o{createTripcode(t){const e=t.indexOf("#");if(-1===e)return{name:t,tripcode:""};const r=t.substring(e+1);return{name:t=t.substring(0,e),tripcode:(0,a.default)(r)}}}e.WakabaTripcodeGenerator=o,e.default=o},142:t=>{t.exports=require("dotenv")},406:t=>{t.exports=require("koa")},155:t=>{t.exports=require("koa-bodyparser")},741:t=>{t.exports=require("koa-router")},661:t=>{t.exports=require("sqlite3")},379:t=>{t.exports=require("tripcode")},685:t=>{t.exports=require("http")},282:t=>{t.exports=require("process")}},e={};!function r(s){var a=e[s];if(void 0!==a)return a.exports;var o=e[s]={exports:{}};return t[s].call(o.exports,o,o.exports,r),o.exports}(607)})();